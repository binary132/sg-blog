<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Update on SynapseGarden Weblog</title>
    <link>https://blog.synapsegarden.net/tags/update/</link>
    <description>Recent content in Update on SynapseGarden Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Bodie Solomon</copyright>
    <lastBuildDate>Mon, 18 Jan 2016 08:38:51 -0500</lastBuildDate>
    <atom:link href="https://blog.synapsegarden.net/tags/update/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Phoenix</title>
      <link>https://blog.synapsegarden.net/update/phoenix/</link>
      <pubDate>Mon, 18 Jan 2016 08:38:51 -0500</pubDate>
      
      <guid>https://blog.synapsegarden.net/update/phoenix/</guid>
      <description>

&lt;p&gt;Work is progressing on revising the SG Weblog&amp;rsquo;s Dart scripts into
&lt;a href=&#34;http://x-tag.github.io/&#34;&gt;X-Tags&lt;/a&gt;.  We&amp;rsquo;re also pushing forward on a profound
revision to &lt;a href=&#34;https://github.com/go-phoenix/phoenix&#34;&gt;Phoenix Engine in Go&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;web-components:4cc618470dee3000e078685ec8030c75&#34;&gt;Web Components&lt;/h2&gt;

&lt;p&gt;We think Web Components are a good approach to solving the problems of
declarative DOM encapsulation without resorting to programming techniques which
turn web standards on their heads.  We&amp;rsquo;ve been sketching up some example Web
Components using X-Tags, which embed very cleanly in Hugo.  Experiments with
&lt;a href=&#34;https://www.polymer-project.org/1.0/&#34;&gt;Polymer&lt;/a&gt; are also in the works.&lt;/p&gt;

&lt;h2 id=&#34;dash:4cc618470dee3000e078685ec8030c75&#34;&gt;Dash&lt;/h2&gt;

&lt;p&gt;One of SynapseGarden&amp;rsquo;s top priorities is to deliver a packaged frontend toolkit
for Mindfork, which we&amp;rsquo;re calling Dash.  Dash will be the foundation for the SG
core site, where our collaboration efforts will take place.  It will also be
suitable for others to build their own frontends to their own custom Mindfork
deploys.&lt;/p&gt;

&lt;p&gt;We think Web Components will help us provide exactly what people will need to
build great Dash sites with minimal difficulty.&lt;/p&gt;

&lt;h2 id=&#34;phoenix:4cc618470dee3000e078685ec8030c75&#34;&gt;Phoenix&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/synapse-garden/phoenix&#34;&gt;Phoenix Engine&lt;/a&gt; is currently a
small, experimental OpenGL Scala game engine for building procedural universes.&lt;/p&gt;

&lt;p&gt;Scala is a less-than-optimal choice for such a project.  We&amp;rsquo;re exploring other
options for it, and have
&lt;a href=&#34;https://github.com/synapse-garden/phoenix-cxx&#34;&gt;a small C++11 port&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A core design goal for Phoenix is to be suitable for fully fluid cross-platform
builds.  While the C++ version is suitable, its build tooling is a challenge for
junior developers to engage with.&lt;/p&gt;

&lt;p&gt;Ultimately, Go&amp;rsquo;s performance
&lt;a href=&#34;http://blog.golang.org/profiling-go-programs&#34;&gt;compares favorably with C++&lt;/a&gt;.  We
have kept our eyes on Go packages for working with OpenGL and native windowing
for some time, and it appears these are now in good shape for production-ready
software.  Go&amp;rsquo;s garbage collector is also now concurrent as of Go 1.5 and
reduces GC pauses to suitable intervals for game development.&lt;/p&gt;

&lt;p&gt;We feel that Go will reduce barriers to entry for work on Phoenix, as well as
engaging what is a very active and healthy community ecosystem.  It also offers
fluid, simple concurrency structures and an amazingly clean build chain.&lt;/p&gt;

&lt;p&gt;However, it lacks in-language compile-time generics, which could be a serious
performance issue in a CPU-intensive game engine.&lt;/p&gt;

&lt;h3 id=&#34;compile-time-generics-in-go:4cc618470dee3000e078685ec8030c75&#34;&gt;Compile-Time Generics in Go?&lt;/h3&gt;

&lt;p&gt;Therefore, we&amp;rsquo;ve developed a concept for a generative meta-engine in Go.
Phoenix will generate code using Go&amp;rsquo;s packages, using an extensible set of
packages for UI, models, and graphics.  The first target project is a GUI SDK
for using Phoenix.&lt;/p&gt;

&lt;p&gt;We think that thanks to &lt;a href=&#34;https://github.com/gopherjs/gopherjs&#34;&gt;GopherJS&lt;/a&gt;, this
can be accomplished cleanly using Go, on essentially any platform a UI package
can be written for, i.e., Windows, Linux, OS X, iOS, Android, and browser.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re very excited to demo the new Phoenix!&lt;/p&gt;

&lt;h3 id=&#34;until-next-week:4cc618470dee3000e078685ec8030c75&#34;&gt;Until next week!&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>2016</title>
      <link>https://blog.synapsegarden.net/core/2016/</link>
      <pubDate>Mon, 04 Jan 2016 17:51:14 -0500</pubDate>
      
      <guid>https://blog.synapsegarden.net/core/2016/</guid>
      <description>

&lt;p&gt;Welcome back to the SynapseGarden blog in the year 2016!  We&amp;rsquo;ll unfold our near-
term plans for Mindfork and its users.&lt;/p&gt;

&lt;h2 id=&#34;plans:26d60b987087598cf4f2d6dedb251778&#34;&gt;Plans&lt;/h2&gt;

&lt;p&gt;Things have been slow for SG over the Christmas holidays.  Today we had a brief
team meeting to get back on our feet, and plotted out a few plans for the next
few weeks.&lt;/p&gt;

&lt;p&gt;SynapseGarden has a number of projects on the back burner.
We&amp;rsquo;ve been working on and off for some time on a concept for a game inspired by
&lt;a href=&#34;http://www.bay12games.com/dwarves/&#34;&gt;Dwarf Fortress&lt;/a&gt;, a truly remarkable
&amp;ldquo;roguelike&amp;rdquo; world simulator.  This week we&amp;rsquo;re evaluating engine options to make
a serious go of it, and sketching up an extensible client/server model for
multi-player.  We have a bit of preliminary client content on our Github at
&lt;a href=&#34;https://github.com/synapse-garden/phoenix&#34;&gt;https://github.com/synapse-garden/phoenix&lt;/a&gt; and
&lt;a href=&#34;https://github.com/synapse-garden/phoenix-cxx&#34;&gt;https://github.com/synapse-garden/phoenix-cxx&lt;/a&gt;.  We are considering switching to
Unreal Engine for more efficient work, but the game universe is highly
procedural.  More research is required.&lt;/p&gt;

&lt;p&gt;On the Mindfork front, we&amp;rsquo;ll be adding TLS to all of our webservices, to match
our site.  We also will be striking forward on a main site at
&lt;a href=&#34;https://synapsegarden.net&#34;&gt;https://synapsegarden.net&lt;/a&gt;.  Hopefully we&amp;rsquo;ll have some great content for you on
that topic next week!&lt;/p&gt;

&lt;h2 id=&#34;progress:26d60b987087598cf4f2d6dedb251778&#34;&gt;Progress&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ve updated the SG Weblog to exclusively use HTTPS.  We host on
&lt;a href=&#34;https://pages.github.com&#34;&gt;Github Pages&lt;/a&gt;, so it was a bit of an adventure to get
our custom URL working.  We ended up using
&lt;a href=&#34;https://cloudflare.com&#34;&gt;CloudFlare&amp;rsquo;s&lt;/a&gt; static site caching, which offers the
option to default to HTTPS on page view.&lt;/p&gt;

&lt;h3 id=&#34;stay-tuned:26d60b987087598cf4f2d6dedb251778&#34;&gt;Stay tuned!&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Beginnings</title>
      <link>https://blog.synapsegarden.net/dev/beginnings/</link>
      <pubDate>Mon, 14 Dec 2015 05:00:00 -0500</pubDate>
      
      <guid>https://blog.synapsegarden.net/dev/beginnings/</guid>
      <description>

&lt;p&gt;In which a brief overview of current SG software and roadmap is given.  This
week’s adventures: Dart, Polymer, and Hugo.&lt;/p&gt;

&lt;p&gt;Hello again.  This week our attention has been focused on creating a small
browser client for the prototype Mindfork backend we have running here:&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;source&#34;&gt;&lt;/div&gt;

&lt;script async src=&#34;https://blog.synapsegarden.net/script/js/source.dart.js&#34;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;h2 id=&#34;polymer-dart-does-not-play-well-with-others:6bce3dfe5168a762038ec36830bc213f&#34;&gt;Polymer-Dart: does not play well with others.&lt;/h2&gt;

&lt;p&gt;The SynapseGarden Weblog is a &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; blog hosted on Github
Pages.  Embedded scripts must therefore require minimal modification to HTML
content, since it is generated from Markdown.&lt;/p&gt;

&lt;p&gt;This sets the expectations well for our web client.  Right now we’re working
out the details of our client architecture, but there are some basic
requirements out the gate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Must provide easily distributed reusable standalone components.&lt;/li&gt;
&lt;li&gt;These components must be usable together in a greater app context.&lt;/li&gt;
&lt;li&gt;These components must offer backend connectors for Mindfork.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We therefore kept these elements at the forefront during the week’s work with
&lt;a href=&#34;https://github.com/dart-lang/polymer-dart&#34;&gt;Polymer-Dart&lt;/a&gt;.  Alas, it is far
from a match made in heaven.  While Polymer-Dart seems to meet our needs
nicely, the reality is that it has strong expectations about the structure
and content of the entire site it works within, to the extent that it
generates the HTML index which it expects to work with, with significant
mangling.&lt;/p&gt;

&lt;p&gt;It’s possible this could be picked apart and found to be workable, and we’d
love for it to be.  However, it doesn’t look like this is the framework we
need for Dash.&lt;/p&gt;

&lt;h2 id=&#34;this-week:6bce3dfe5168a762038ec36830bc213f&#34;&gt;This week&lt;/h2&gt;

&lt;p&gt;The next section is a brief overview of our week exploring Polymer-Dart for
our Dash frontend.  In this section, we’ll outline what we’re working on this
week.&lt;/p&gt;

&lt;p&gt;Right now, we have a simple prototype Mindfork service running at
&lt;a href=&#34;https://mfp.synapsegarden.net:25000&#34;&gt;https://mfp.synapsegarden.net:25000&lt;/a&gt;.  The source is linked above; we
encourage you to review the API and open a pull request if you see anything
you’d like to add.&lt;/p&gt;

&lt;p&gt;In the meantime, we’re pushing forward on offering an embedded web login
panel and a few other features (e.g.  password reset) so that logins can be
handed out and automated collaboration begin in earnest.&lt;/p&gt;

&lt;h2 id=&#34;dash-you-say:6bce3dfe5168a762038ec36830bc213f&#34;&gt;Dash you say?&lt;/h2&gt;

&lt;p&gt;Dash is a concept we’ve been hammering out for some time, for a very
atteries-included framework for building apps which make use of Mindfork
backends.  Since SynapseGarden’s community and development will be driven by
the Mindfork backend, Dash will be used extensively in our web UI.&lt;/p&gt;

&lt;p&gt;If our goal was to build our own webapp and backend, the obvious choice would
be to use an existing set of tools; Ember, Angular, React, and many others
offer excellent options for anyone who wants to build a particular frontend.&lt;/p&gt;

&lt;p&gt;However, what we’re really looking to do is to provide tools for people to
build &lt;em&gt;with minimal effort&lt;/em&gt; web applications that make use of community-driven
data on the Mindfork model.  That means collaboration, human networking, and
behavioral optimization.&lt;/p&gt;

&lt;p&gt;While all of the aforementioned options may prove to be useful to this end,
what we will distribute to developers who wish to use Mindfork will not look
like a Javascript framework.  It may be a library, similar to d3js, which
intelligent data-driven elements can be used from in simple (or complex)
Javascript.  It may be a set of &lt;a href=&#34;http://webcomponents.org/&#34;&gt;Web Components&lt;/a&gt;.
Our options are still open; however, we recently made the tough decision to
abandon our
&lt;a href=&#34;https://github.com/synapse-garden/dash-cljs&#34;&gt;Clojurescript frontend&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;dart-you-say:6bce3dfe5168a762038ec36830bc213f&#34;&gt;Dart you say?&lt;/h2&gt;

&lt;p&gt;We believe Dart offers a highly-structured and easily-tested systematic
approach to web application development.  While we want to offer an easy and
usable API to people who want to use Dash, we don’t particularly care that
it’s easy to open the hood and muck about with.  Most users should not have to
do that; those who do are intelligent enough to learn Dart, which is a very
easy and usable language from what little we’ve experienced.  Like Go, it
offers quite excellent tooling out of the box, and does not require any
third-party software besides the &lt;a href=&#34;https://dartlang.org/&#34;&gt;Dart SDK&lt;/a&gt;.
There’s an excellent plugin for Intellij IDEA, if that’s your style;
otherwise, everything in the Dart SDK is comfortable to use from the command
line.&lt;/p&gt;

&lt;p&gt;Ultimately, the needs of our community come first and foremost; we are also
considering ES6, and &lt;a href=&#34;http://x-tag.github.io/&#34;&gt;X-Tag Web Components&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;see-you-next-week:6bce3dfe5168a762038ec36830bc213f&#34;&gt;See you next week!&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>